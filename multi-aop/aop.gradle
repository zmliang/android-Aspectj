import com.android.build.gradle.LibraryPlugin
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main


apply plugin: 'com.android.library'
repositories {
    mavenCentral()
}


android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'org.aspectj:aspectjrt:1.8.1'
}

android.libraryVariants.all {
    variant->
        LibraryPlugin plugin = project.plugins.getPlugin(LibraryPlugin)
        JavaCompile compile = variant.javaCompile
        compile.doLast {
            String[] args=["-showWeaveInfo",
                            "-1.5",
                            "-inpath",compile.destinationDir.toString(),
                            "-aspectpath",compile.classpath.asPath,
                            "-d",compile.destinationDir.toString(),
                            "-classpath",compile.classpath.asPath,
                            "-bootclasspath",plugin.project.android.bootClasspath.join(
                            File.pathSeparator
            )]

            MessageHandler handler = new MessageHandler(true);
            new Main().run(args,handler)

            def log = project.logger
            for (IMessage message:handler.getMessages(null,true)){
                switch (message.getKind()) {
                    case IMessage.ABORT:
                    case IMessage.ERROR:
                    case IMessage.FAIL:
                        log.error message.message, message.thrown
                        break;
                    case IMessage.WARNING:
                    case IMessage.INFO:
                        log.info message.message, message.thrown
                        break;
                    case IMessage.DEBUG:
                        log.debug message.message, message.thrown
                        break;
                }
            }
        }
}
